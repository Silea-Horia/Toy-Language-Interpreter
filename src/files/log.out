PrgState is:
ExeStack:
(Declare variable with type: Ref (int), id=v; (new(v, 20); (Declare variable with type: Ref (Ref (int)), id=a; (new(a, v); (print(v); print(a))))))
SymTable:
Out:
FileTable:
Heap:

PrgState is:
ExeStack:
Declare variable with type: Ref (int), id=v
(new(v, 20); (Declare variable with type: Ref (Ref (int)), id=a; (new(a, v); (print(v); print(a)))))
SymTable:
Out:
FileTable:
Heap:

PrgState is:
ExeStack:
(new(v, 20); (Declare variable with type: Ref (Ref (int)), id=a; (new(a, v); (print(v); print(a)))))
SymTable:
v->(0, int)
Out:
FileTable:
Heap:

PrgState is:
ExeStack:
new(v, 20)
(Declare variable with type: Ref (Ref (int)), id=a; (new(a, v); (print(v); print(a))))
SymTable:
v->(0, int)
Out:
FileTable:
Heap:

PrgState is:
ExeStack:
(Declare variable with type: Ref (Ref (int)), id=a; (new(a, v); (print(v); print(a))))
SymTable:
v->(1, int)
Out:
FileTable:
Heap:
1->20

PrgState is:
ExeStack:
Declare variable with type: Ref (Ref (int)), id=a
(new(a, v); (print(v); print(a)))
SymTable:
v->(1, int)
Out:
FileTable:
Heap:
1->20

PrgState is:
ExeStack:
(new(a, v); (print(v); print(a)))
SymTable:
a->(0, Ref (int))
v->(1, int)
Out:
FileTable:
Heap:
1->20

PrgState is:
ExeStack:
new(a, v)
(print(v); print(a))
SymTable:
a->(0, Ref (int))
v->(1, int)
Out:
FileTable:
Heap:
1->20

PrgState is:
ExeStack:
(print(v); print(a))
SymTable:
a->(2, Ref (int))
v->(1, int)
Out:
FileTable:
Heap:
1->20
2->(1, int)

PrgState is:
ExeStack:
print(v)
print(a)
SymTable:
a->(2, Ref (int))
v->(1, int)
Out:
FileTable:
Heap:
1->20
2->(1, int)

PrgState is:
ExeStack:
print(a)
SymTable:
a->(2, Ref (int))
v->(1, int)
Out:
(1, int)
FileTable:
Heap:
1->20
2->(1, int)

PrgState is:
ExeStack:
SymTable:
a->(2, Ref (int))
v->(1, int)
Out:
(1, int)
(2, Ref (int))
FileTable:
Heap:
1->20
2->(1, int)

